{
    "$id": "https://schemas.botframework.com/schemas/skills/skill-manifest-2.1.preview-1.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$version": "2.1.preview-1",
    "title": "Skill Manifest Schema (v2.1.preview-1)",
    "description": "A schema for Bot Framework skill manifests",
    "type": "object",
    "required": [
        "$id",
        "$schema",
        "name",
        "version",
        "publisherName",
        "endpoints"
    ],
    "properties": {
        "$schema": {
            "type": "string",
            "format": "uri",
            "description": "The schema to verify this skill manifest against"
        },
        "$id": {
            "type": "string",
            "description": "The identifier for the skill manifest"
        },
        "name": {
            "type": "string",
            "description": "Name of the skill"
        },
        "version": {
            "type": "string",
            "description": "Skill version"
        },
        "description": {
            "type": "string",
            "description": "A human readable description for the skill"
        },
        "publisherName": {
            "type": "string",
            "description": "The name of the skill publisher"
        },
        "privacyUrl": {
            "type": "string",
            "format": "uri",
            "description": "The URL with the privacy description for the skill"
        },
        "copyright": {
            "type": "string",
            "description": "The copyright for the skill"
        },
        "license": {
            "type": "string",
            "description": "The license agreement for the skill"
        },
        "iconUrl": {
            "type": "string",
            "format": "uri",
            "description": "Optional icon to be shown for the skill"
        },
        "tags": {
            "type": "array",
            "uniqueItems": true,
            "description": "An array of strings with tags for the skill",
            "items": {
                "type": "string"
            }
        },
        "endpoints": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "description": "List of endpoints supported by the skill",
            "items": {
                "$ref": "#/definitions/endpoint"
            }
        },
        "dispatchModels": {
            "type": "object",
            "description": "Language models and top level intents for the skill",
            "properties": {
                "languages": {
                    "type": "object",
                    "description": "List of languages supported by the skill",
                    "minProperties": 1,
                    "additionalProperties": {
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "description": "List of language models supported by the skill",
                        "items": {
                            "$ref": "#/definitions/languageModel"
                        }
                    }
                },
                "intents": {
                    "type": "array",
                    "uniqueItems": true,
                    "description": "A list of the skill's top level intents that can be used by the consumer to filter out language files.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "additionalProperties": false
        },
        "activities": {
            "type": "object",
            "description": "Definition of activities to enable skill host tooling to programmatically interact with the skill.",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/eventActivity"
                    },
                    {
                        "$ref": "#/definitions/invokeActivity"
                    },
                    {
                        "$ref": "#/definitions/messageActivity"
                    },
                    {
                        "$ref": "#/definitions/otherActivities"
                    }
                ]
            }
        },
        "activitiesSent": {
            "type": "object",
            "description": "Definitions of activities to enable skill host tooling to handle activities which may be sent by the skill.",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/eventActivity"
                    },
                    {
                        "$ref": "#/definitions/messageActivity"
                    },
                    {
                        "$ref": "#/definitions/otherActivities"
                    }
                ]
            }
        },
        "definitions": {
            "type": "object",
            "description": "Definitions of the structure of object payloads",
            "additionalProperties": {
                "$ref": "http://json-schema.org/draft-07/schema#"
            }
        }
    },
    "additionalProperties": false,
    "definitions": {
        "endpoint": {
            "type": "object",
            "description": "Skill endpoint definition",
            "required": [
                "name",
                "endpointUrl",
                "msAppId"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique name for the endpoint",
                    "default": "default"
                },
                "protocol": {
                    "type": "string",
                    "description": "Supported protocol",
                    "default": "BotFrameworkV3"
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "Description of the endpoint",
                    "examples": [
                        "Production bot"
                    ]
                },
                "endpointUrl": {
                    "type": "string",
                    "title": "Endpoint Url",
                    "format": "uri",
                    "description": "Endpoint for the skill",
                    "examples": [
                        "http://contoso.com/api/messaages"
                    ]
                },
                "msAppId": {
                    "type": "string",
                    "title": "Microsoft App Id",
                    "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$",
                    "description": "The Microsoft AppId for the skill. This app ID is used to authenticate requests"
                }
            },
            "additionalProperties": false
        },
        "eventActivity": {
            "type": "object",
            "title": "Event Activity",
            "description": "An activity with Type=Event where the Name property indicates the task that the skill will execute",
            "required": [
                "type",
                "name"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The activity type",
                    "const": "event"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the event",
                    "examples": [
                        "BookFlight"
                    ]
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "Description for the activity"
                },
                "value": {
                    "$ref": "http://json-schema.org/draft-07/schema#",
                    "type": "object",
                    "description": "The JsonSchema definition of the shape of the value property that this event expects"
                },
                "resultValue": {
                    "$ref": "http://json-schema.org/draft-07/schema#",
                    "type": "object",
                    "description": "The JsonSchema definition of the shape of the resultValue that this event may produce"
                }
            },
            "additionalProperties": false
        },
        "invokeActivity": {
            "type": "object",
            "title": "Invoke Activity",
            "description": "An activity with Type=Invoke where the Name property indicates the task that the skill will execute",
            "required": [
                "type",
                "name"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The activity type",
                    "const": "invoke"
                },
                "name": {
                    "type": "string",
                    "description": "The name property for the invoke activity",
                    "examples": [
                        "GetWeather"
                    ]
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "Description for the activity"
                },
                "value": {
                    "type": "object",
                    "description": "The JsonSchema definition of the shape of the value property that this event expects",
                    "$ref": "http://json-schema.org/draft-07/schema#"
                },
                "resultValue": {
                    "type": "object",
                    "description": "The JsonSchema definition of the shape of the resultValue that this event may produce",
                    "$ref": "http://json-schema.org/draft-07/schema#"
                }
            },
            "additionalProperties": false
        },
        "messageActivity": {
            "type": "object",
            "title": "Message Activity",
            "description": "An activity with Type=Message where the utterance is passed to the skill in the Text property",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The activity type",
                    "const": "message",
                    "default": "message"
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "Description for the activity"
                },
                "value": {
                    "type": "object",
                    "description": "The JsonSchema definition of the shape of the value property that this message would like to have",
                    "$ref": "http://json-schema.org/draft-07/schema#"
                },
                "resultValue": {
                    "type": "object",
                    "description": "The JsonSchema definition of the shape of the resultValue that this message may produce",
                    "$ref": "http://json-schema.org/draft-07/schema#"
                }
            },
            "additionalProperties": false
        },
        "otherActivities": {
            "type": "object",
            "title": "Activity",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "title": "Activity Type",
                    "description": "Contains the activity type (message, event, invoke, etc.)",
                    "enum": [
                        "message",
                        "event",
                        "invoke",
                        "messageReaction",
                        "endOfConversation",
                        "handoff",
                        "typing",
                        "conversationUpdate",
                        "trace",
                        "installationUpdate",
                        "contactRelationUpdate",
                        "suggestion",
                        "deleteUserData",
                        "messageUpdate",
                        "messageDelete"
                    ],
                    "pattern":"^(?!(message|event|invoke)$)((messageReaction|endOfConversation|handoff|typing|conversationUpdate|trace|installationUpdate|contactRelationUpdate|suggestion|deleteUserData|messageUpdate|messageDelete)$)"
                }
            },
            "additionalProperties": true
        },
        "languageModel": {
            "type": "object",
            "description": "A language model for a given culture. The name is a combination of an ISO 639 two-letter lowercase culture code associated with a language and an ISO 3166 two-letter uppercase subculture code associated with a country or region",
            "required": [
                "name",
                "contentType",
                "url"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name for the language model"
                },
                "contentType": {
                    "type": "string",
                    "description": "Type of the language model"
                },
                "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URL for the location of the language model file"
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "Description for the language model"
                }
            },
            "additionalProperties": false
        }
    }
}